// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

using System;
using ClientApi;
using Newtonsoft.Json.Linq;
using SpacetimeDB;

namespace SpacetimeDB.Types
{
	public static partial class Reducer
	{
		public delegate void MoveOrSwapInventorySlotHandler(ReducerEvent reducerEvent, ulong playerEntityId, ulong inventoryEntityId, uint sourcePocketIdx, uint destPocketIdx);
		public static event MoveOrSwapInventorySlotHandler OnMoveOrSwapInventorySlotEvent;

		public static void MoveOrSwapInventorySlot(ulong playerEntityId, ulong inventoryEntityId, uint sourcePocketIdx, uint destPocketIdx)
		{
			var _argArray = new object[] {playerEntityId, inventoryEntityId, sourcePocketIdx, destPocketIdx};
			var _message = new SpacetimeDBClient.ReducerCallRequest {
				fn = "move_or_swap_inventory_slot",
				args = _argArray,
			};
			Newtonsoft.Json.JsonSerializerSettings _settings = new Newtonsoft.Json.JsonSerializerSettings
			{
				Converters = { new SpacetimeDB.SomeWrapperConverter(), new SpacetimeDB.EnumWrapperConverter() },
				ContractResolver = new SpacetimeDB.JsonContractResolver(),
			};
			SpacetimeDBClient.instance.InternalCallReducer(Newtonsoft.Json.JsonConvert.SerializeObject(_message, _settings));
		}

		[ReducerCallback(FunctionName = "move_or_swap_inventory_slot")]
		public static bool OnMoveOrSwapInventorySlot(ClientApi.Event dbEvent)
		{
			if(OnMoveOrSwapInventorySlotEvent != null)
			{
				var args = ((ReducerEvent)dbEvent.FunctionCall.CallInfo).MoveOrSwapInventorySlotArgs;
				OnMoveOrSwapInventorySlotEvent((ReducerEvent)dbEvent.FunctionCall.CallInfo
					,(ulong)args.PlayerEntityId
					,(ulong)args.InventoryEntityId
					,(uint)args.SourcePocketIdx
					,(uint)args.DestPocketIdx
				);
				return true;
			}
			return false;
		}

		[DeserializeEvent(FunctionName = "move_or_swap_inventory_slot")]
		public static void MoveOrSwapInventorySlotDeserializeEventArgs(ClientApi.Event dbEvent)
		{
			var args = new MoveOrSwapInventorySlotArgsStruct();
			var bsatnBytes = dbEvent.FunctionCall.ArgBytes;
			using var ms = new System.IO.MemoryStream();
			ms.SetLength(bsatnBytes.Length);
			bsatnBytes.CopyTo(ms.GetBuffer(), 0);
			ms.Position = 0;
			using var reader = new System.IO.BinaryReader(ms);
			var args_0_value = SpacetimeDB.SATS.AlgebraicValue.Deserialize(SpacetimeDB.SATS.AlgebraicType.CreatePrimitiveType(SpacetimeDB.SATS.BuiltinType.Type.U64), reader);
			args.PlayerEntityId = args_0_value.AsU64();
			var args_1_value = SpacetimeDB.SATS.AlgebraicValue.Deserialize(SpacetimeDB.SATS.AlgebraicType.CreatePrimitiveType(SpacetimeDB.SATS.BuiltinType.Type.U64), reader);
			args.InventoryEntityId = args_1_value.AsU64();
			var args_2_value = SpacetimeDB.SATS.AlgebraicValue.Deserialize(SpacetimeDB.SATS.AlgebraicType.CreatePrimitiveType(SpacetimeDB.SATS.BuiltinType.Type.U32), reader);
			args.SourcePocketIdx = args_2_value.AsU32();
			var args_3_value = SpacetimeDB.SATS.AlgebraicValue.Deserialize(SpacetimeDB.SATS.AlgebraicType.CreatePrimitiveType(SpacetimeDB.SATS.BuiltinType.Type.U32), reader);
			args.DestPocketIdx = args_3_value.AsU32();
			dbEvent.FunctionCall.CallInfo = new ReducerEvent(ReducerType.MoveOrSwapInventorySlot, "move_or_swap_inventory_slot", dbEvent.Timestamp, Identity.From(dbEvent.CallerIdentity.ToByteArray()), dbEvent.Message, dbEvent.Status, args);
		}
	}

	public partial class MoveOrSwapInventorySlotArgsStruct
	{
		public ulong PlayerEntityId;
		public ulong InventoryEntityId;
		public uint SourcePocketIdx;
		public uint DestPocketIdx;
	}

}
