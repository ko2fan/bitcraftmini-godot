// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

using System;
using ClientApi;
using Newtonsoft.Json.Linq;
using SpacetimeDB;

namespace SpacetimeDB.Types
{
	public static partial class Reducer
	{
		public delegate void ChatMessageHandler(ReducerEvent reducerEvent, string message);
		public static event ChatMessageHandler OnChatMessageEvent;

		public static void ChatMessage(string message)
		{
			var _argArray = new object[] {message};
			var _message = new SpacetimeDBClient.ReducerCallRequest {
				fn = "chat_message",
				args = _argArray,
			};
			Newtonsoft.Json.JsonSerializerSettings _settings = new Newtonsoft.Json.JsonSerializerSettings
			{
				Converters = { new SpacetimeDB.SomeWrapperConverter(), new SpacetimeDB.EnumWrapperConverter() },
				ContractResolver = new SpacetimeDB.JsonContractResolver(),
			};
			SpacetimeDBClient.instance.InternalCallReducer(Newtonsoft.Json.JsonConvert.SerializeObject(_message, _settings));
		}

		[ReducerCallback(FunctionName = "chat_message")]
		public static bool OnChatMessage(ClientApi.Event dbEvent)
		{
			if(OnChatMessageEvent != null)
			{
				var args = ((ReducerEvent)dbEvent.FunctionCall.CallInfo).ChatMessageArgs;
				OnChatMessageEvent((ReducerEvent)dbEvent.FunctionCall.CallInfo
					,(string)args.Message
				);
				return true;
			}
			return false;
		}

		[DeserializeEvent(FunctionName = "chat_message")]
		public static void ChatMessageDeserializeEventArgs(ClientApi.Event dbEvent)
		{
			var args = new ChatMessageArgsStruct();
			var bsatnBytes = dbEvent.FunctionCall.ArgBytes;
			using var ms = new System.IO.MemoryStream();
			ms.SetLength(bsatnBytes.Length);
			bsatnBytes.CopyTo(ms.GetBuffer(), 0);
			ms.Position = 0;
			using var reader = new System.IO.BinaryReader(ms);
			var args_0_value = SpacetimeDB.SATS.AlgebraicValue.Deserialize(SpacetimeDB.SATS.AlgebraicType.CreatePrimitiveType(SpacetimeDB.SATS.BuiltinType.Type.String), reader);
			args.Message = args_0_value.AsString();
			dbEvent.FunctionCall.CallInfo = new ReducerEvent(ReducerType.ChatMessage, "chat_message", dbEvent.Timestamp, Identity.From(dbEvent.CallerIdentity.ToByteArray()), dbEvent.Message, dbEvent.Status, args);
		}
	}

	public partial class ChatMessageArgsStruct
	{
		public string Message;
	}

}
