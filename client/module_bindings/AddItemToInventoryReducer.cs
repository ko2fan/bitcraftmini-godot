// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

using System;
using ClientApi;
using Newtonsoft.Json.Linq;
using SpacetimeDB;

namespace SpacetimeDB.Types
{
	public static partial class Reducer
	{
		public delegate void AddItemToInventoryHandler(ReducerEvent reducerEvent, ulong entityId, uint itemId, int pocketIdx, int itemCount);
		public static event AddItemToInventoryHandler OnAddItemToInventoryEvent;

		public static void AddItemToInventory(ulong entityId, uint itemId, int pocketIdx, int itemCount)
		{
			var _argArray = new object[] {entityId, itemId, pocketIdx, itemCount};
			var _message = new SpacetimeDBClient.ReducerCallRequest {
				fn = "add_item_to_inventory",
				args = _argArray,
			};
			Newtonsoft.Json.JsonSerializerSettings _settings = new Newtonsoft.Json.JsonSerializerSettings
			{
				Converters = { new SpacetimeDB.SomeWrapperConverter(), new SpacetimeDB.EnumWrapperConverter() },
				ContractResolver = new SpacetimeDB.JsonContractResolver(),
			};
			SpacetimeDBClient.instance.InternalCallReducer(Newtonsoft.Json.JsonConvert.SerializeObject(_message, _settings));
		}

		[ReducerCallback(FunctionName = "add_item_to_inventory")]
		public static bool OnAddItemToInventory(ClientApi.Event dbEvent)
		{
			if(OnAddItemToInventoryEvent != null)
			{
				var args = ((ReducerEvent)dbEvent.FunctionCall.CallInfo).AddItemToInventoryArgs;
				OnAddItemToInventoryEvent((ReducerEvent)dbEvent.FunctionCall.CallInfo
					,(ulong)args.EntityId
					,(uint)args.ItemId
					,(int)args.PocketIdx
					,(int)args.ItemCount
				);
				return true;
			}
			return false;
		}

		[DeserializeEvent(FunctionName = "add_item_to_inventory")]
		public static void AddItemToInventoryDeserializeEventArgs(ClientApi.Event dbEvent)
		{
			var args = new AddItemToInventoryArgsStruct();
			var bsatnBytes = dbEvent.FunctionCall.ArgBytes;
			using var ms = new System.IO.MemoryStream();
			ms.SetLength(bsatnBytes.Length);
			bsatnBytes.CopyTo(ms.GetBuffer(), 0);
			ms.Position = 0;
			using var reader = new System.IO.BinaryReader(ms);
			var args_0_value = SpacetimeDB.SATS.AlgebraicValue.Deserialize(SpacetimeDB.SATS.AlgebraicType.CreatePrimitiveType(SpacetimeDB.SATS.BuiltinType.Type.U64), reader);
			args.EntityId = args_0_value.AsU64();
			var args_1_value = SpacetimeDB.SATS.AlgebraicValue.Deserialize(SpacetimeDB.SATS.AlgebraicType.CreatePrimitiveType(SpacetimeDB.SATS.BuiltinType.Type.U32), reader);
			args.ItemId = args_1_value.AsU32();
			var args_2_value = SpacetimeDB.SATS.AlgebraicValue.Deserialize(SpacetimeDB.SATS.AlgebraicType.CreatePrimitiveType(SpacetimeDB.SATS.BuiltinType.Type.I32), reader);
			args.PocketIdx = args_2_value.AsI32();
			var args_3_value = SpacetimeDB.SATS.AlgebraicValue.Deserialize(SpacetimeDB.SATS.AlgebraicType.CreatePrimitiveType(SpacetimeDB.SATS.BuiltinType.Type.I32), reader);
			args.ItemCount = args_3_value.AsI32();
			dbEvent.FunctionCall.CallInfo = new ReducerEvent(ReducerType.AddItemToInventory, "add_item_to_inventory", dbEvent.Timestamp, Identity.From(dbEvent.CallerIdentity.ToByteArray()), dbEvent.Message, dbEvent.Status, args);
		}
	}

	public partial class AddItemToInventoryArgsStruct
	{
		public ulong EntityId;
		public uint ItemId;
		public int PocketIdx;
		public int ItemCount;
	}

}
